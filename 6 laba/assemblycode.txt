ORG 0x01A	
X:	WORD ?	
XOLD:	WORD ?
SAVED_A:	WORD ?	
SAVED_AB:	WORD ?	
LEFT:	WORD 0xFFED	; левая граница (-128-5)/7 = -19
RIGHT:	WORD 0x0011	; правая граница (127 - 5)/7 = 17

	ORG 0x0 	; Инициализация векторов прерывания
V0:	WORD 	$DEFAULT,0x180 ; Вектор прерывания #0
V1: 	WORD 	$INT1,0x180 	; Вектор прерывания #1
V2: 	WORD 	$DEFAULT,0x180  	; Вектор прерывания #2
V3: 	WORD 	$INT2,0x180  ; Вектор прерывания #3
V4: 	WORD 	$DEFAULT,0x180 ; Вектор прерывания #4
V5: 	WORD 	$DEFAULT,0x180 ; Вектор прерывания #5
V6: 	WORD 	$DEFAULT,0x180 ; Вектор прерывания #6
V7: 	WORD 	$DEFAULT,0x180 ; Вектор прерывания #7
DEFAULT:	IRET 	; просто возврат

	ORG 0x0F0 	; загрузка начальных векторов прерывания
START:	DI	; запрет прерываний
 	CLA
 	OUT 0x1 	; MR КВУ-0 на вектор 0
 	OUT 0x5 	; MR КВУ-2 на вектор 0
 	OUT 0xB 	; MR КВУ-4 на вектор 0
 	OUT 0xD 	; MR КВУ-5 на вектор 0
 	OUT 0x11 	; MR КВУ-6 на вектор 0
 	OUT 0x15 	; MR КВУ-7 на вектор 0
 	OUT 0x19 	; MR КВУ-8 на вектор 0
 	OUT 0x1D	; MR КВУ-9 на вектор 0
	
 	LD #0x9 	; разрешить прерывания и вектор №1 
 	OUT 3 	; (1000|0001=1001) в MR КВУ-1
 	LD #0xB 	; разрешить прерывания и вектор №3 
 	OUT 7 	; (1000|0011=1011) в MR КВУ-3
 
 	JUMP $PROG

PROG:	EI	; разрешили прерывания
	CLA
SPINLOOP:	EI	; разрешили прерывания
	LD $X
	DI	; запретили прерывания
	SUB #0x2	; уменьшили на 2
	CMP $LEFT	; сравнили с 
	BLT MIN	; левой границей
	CMP $RIGHT	; сравнили с
	BGE MIN	; правой границей
	ST $X	; сохранили Х
	ST $XOLD	;сохранили старое значение X
	JUMP SPINLOOP ; продолжили бесконечный цикл
MIN:	LD $LEFT	; загрузили левую границу ОДЗ
	ST $X	; сохранили Х
	JUMP SPINLOOP ; продолжили бесконечный цикл

INT1:	DI	; обработка прерывания ВУ-1
	LD $X	; загрузили Х
	ASL	; умножили на 2
	ASL	; умножили на 4
	ASL	; умножили на 8
	SUB $X	; умножили на 7
	NEG	; умножили на -7
	SUB #0x5	; вычли -5
	OUT 2	; вывели на ВУ-1
	HLT	; проверка работоспособности ВУ-1 NOP
	IRET	; возврат из обработки прерывания
INT2:	DI	; обработка прерывания ВУ-3
	CLA
	IN 6	; загрузили РДВУ-3
	ST $SAVED_A ; сохранили РДВУ-3
	AND $X ;умножили на X
	ST $SAVED_AB ;Сохранили
	LD $SAVED_A ;
	OR $X ;
	NOT ;Получили NOT(AB)
	OR $SAVED_AB ;получили исключающее или
	CMP $LEFT	; сравнили с
	BLT MINN	; левой границей
	CMP $RIGHT	; сравнили с
	BGE MINN	; правой границей
	ST $X	; сохранили Х
	HLT	; проверка работоспособности ВУ-3 NOP
	IRET	; возврат из обработки прерывания
MINN:	LD $RIGHT	; загрузили левую границу ОДЗ
	ST $X	; сохранили Х
	HLT	; проверка работоспособности ВУ-3 NOP
	IRET	; возврат из обработки прерывания